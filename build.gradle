plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.gorylenko.gradle-git-properties' version '2.4.1'
	id "com.github.node-gradle.node" version "7.0.2"
	id "com.google.protobuf" version "0.9.4"
}

node {
	download = true
	version = "18.16.1"
	nodeProjectDir = file("${project.projectDir}/frontend")
}

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.security:spring-security-messaging'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'com.auth0:auth0:2.6.1'
	implementation 'com.google.protobuf:protobuf-java:4.27.2'
	implementation 'com.google.protobuf:protobuf-java-util:4.27.2'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8' //cache
	implementation("com.google.guava:guava:33.2.1-jre") //utils
	implementation 'org.apache.commons:commons-lang3:3.15.0' //string utils
	implementation 'com.squareup.okhttp3:okhttp:4.11.0'
	implementation 'com.google.zxing:core:3.5.3' // barcodes
	implementation 'org.apache.pdfbox:pdfbox:3.0.4'



	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootRun {
	args = ["--spring.profiles.active=dev"]

}

bootJar {
	archiveFileName = "${rootProject.name}-${project.property('version')}.jar"
}

// Register NpmTask that will do what "npm run build" command does.
//tasks.register('npmBuild', NpmTask) {
//	args = [ 'run', 'build' ]
//}

task buildProdUI(type: NpmTask) {
	dependsOn npmInstall
	args = ['run', 'buildFast']
}

task buildProdJar(type: NpmTask) {
	dependsOn buildProdUI
	dependsOn bootJar
	tasks.findByName('bootJar').mustRunAfter 'buildProdUI'
}


task buildForBoot(type: NpmTask) {
	dependsOn npmInstall
	args = ['run', 'buildForBoot']
}

task buildAndBootRun {
	dependsOn 'buildForBoot'
	dependsOn 'bootRun'
	tasks.findByName('bootRun').mustRunAfter 'buildForBoot'
}
sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/java',
					'build/generated/source/proto/main/grpc'
		}
	}
}

protobuf {
	protoc {
		// Download from repositories
		artifact = 'com.google.protobuf:protoc:4.27.2'
	}
}
